*help.txt*	Nvim

			VIM - main help file
									 k
      Move around:  Use the cursor keys, or "h" to go left,	       h   l
		    "j" to go down, "k" to go up, "l" to go right.	 j
Close this window:  Use ":q<Enter>".
   Get out of Vim:  Use ":qa!<Enter>" (careful, all changes are lost!).

Jump to a subject:  Position the cursor on a tag (e.g. |bars|) and hit CTRL-].
   With the mouse:  Double-click the left mouse button on a tag, e.g. |bars|.
	Jump back:  Type CTRL-O.  Repeat to go further back.

Get specific help:  It is possible to go directly to whatever you want help
		    on, by giving an argument to the |:help| command.
		    Prepend something to specify the context:  *help-context*

			  WHAT			PREPEND    EXAMPLE	~
		      Normal mode command		   :help x
		      Visual mode command	  v_	   :help v_u
		      Insert mode command	  i_	   :help i_<Esc>
		      Command-line command	  :	   :help :quit
		      Command-line editing	  c_	   :help c_<Del>
		      Vim command argument	  -	   :help -r
		      Option			  '	   :help 'textwidth'
		      Regular expression	  /	   :help /[
		    See |help-summary| for more contexts and an explanation.

  Search for help:  Type ":help word", then hit CTRL-D to see matching
		    help entries for "word".
		    Or use ":helpgrep word". |:helpgrep|

  Getting started:  Do the Vim tutor, a 20 minute interactive training for the
		    basic commands, see |vimtutor|.
		    Read the user manual from start to end: |usr_01.txt|

Vim stands for Vi IMproved.  Most of Vim was made by Bram Moolenaar, but only
through the help of many others.  See |credits|.
------------------------------------------------------------------------------
						*doc-file-list* *Q_ct*
BASIC:
|quickref|	Overview of the most common commands you will use
|tutor|		20 minutes training course for beginners
|copying|	About copyrights
|iccf|		Helping poor children in Uganda
|sponsor|	Sponsor Vim development, become a registered Vim user
|www|		Vim on the World Wide Web
|bugs|		Where to send bug reports

USER MANUAL: These files explain how to accomplish an editing task.

|usr_toc.txt|	Table Of Contents

Getting Started ~
|usr_01.txt|  About the manuals
|usr_02.txt|  The first steps in Vim
|usr_03.txt|  Moving around
|usr_04.txt|  Making small changes
|usr_05.txt|  Set your settings
|usr_06.txt|  Using syntax highlighting
|usr_07.txt|  Editing more than one file
|usr_08.txt|  Splitting windows
|usr_09.txt|  Using the GUI
|usr_10.txt|  Making big changes
|usr_11.txt|  Recovering from a crash
|usr_12.txt|  Clever tricks

Editing Effectively ~
|usr_20.txt|  Typing command-line commands quickly
|usr_21.txt|  Go away and come back
|usr_22.txt|  Finding the file to edit
|usr_23.txt|  Editing other files
|usr_24.txt|  Inserting quickly
|usr_25.txt|  Editing formatted text
|usr_26.txt|  Repeating
|usr_27.txt|  Search commands and patterns
|usr_28.txt|  Folding
|usr_29.txt|  Moving through programs
|usr_30.txt|  Editing programs
|usr_31.txt|  Exploiting the GUI
|usr_32.txt|  The undo tree

Tuning Vim ~
|usr_40.txt|  Make new commands
|usr_41.txt|  Write a Vim script
|usr_42.txt|  Add new menus
|usr_43.txt|  Using filetypes
|usr_44.txt|  Your own syntax highlighted
|usr_45.txt|  Select your language


REFERENCE MANUAL: These files explain every detail of Vim.	*reference_toc*

General subjects ~
|intro.txt|	general introduction to Vim; notation used in help files
|help.txt|	overview and quick reference (this file)
|helphelp.txt|	about using the help files
|index.txt|	alphabetical index of all commands
|help-tags|	all the tags you can jump to (index of tags)
|tips.txt|	various tips on using Vim
|message.txt|	(error) messages and explanations
|develop.txt|	development of Nvim
|debug.txt|	debugging Vim itself
|uganda.txt|	Vim distribution conditions and what to do with your money

Basic editing ~
|starting.txt|	starting Vim, Vim command arguments, initialisation
|editing.txt|	editing and writing files
|motion.txt|	commands for moving around
|scroll.txt|	scrolling the text in the window
|insert.txt|	Insert and Replace mode
|change.txt|	deleting and replacing text
|undo.txt|	Undo and Redo
|repeat.txt|	repeating commands, Vim scripts and debugging
|visual.txt|	using the Visual mode (selecting a text area)
|various.txt|	various remaining commands
|recover.txt|	recovering from a crash

Advanced editing ~
|cmdline.txt|	Command-line editing
|options.txt|	description of all options
|pattern.txt|	regexp patterns and search commands
|map.txt|	key mapping and abbreviations
|tagsrch.txt|	tags and special searches
|windows.txt|	commands for using multiple windows and buffers
|tabpage.txt|	commands for using multiple tab pages
|spell.txt|	spell checking
|diff.txt|	working with two to four versions of the same file
|autocmd.txt|	automatically executing commands on an event
|eval.txt|	expression evaluation, conditional commands
|fold.txt|	hide (fold) ranges of lines

Special issues ~
|print.txt|	printing
|remote.txt|	using Vim as a server or client

Programming language support ~
|indent.txt|	automatic indenting for C and other languages
|syntax.txt|	syntax highlighting
|filetype.txt|	settings done specifically for a type of file
|quickfix.txt|	commands for a quick edit-compile-fix cycle
|ft_ada.txt|	Ada (the programming language) support
|ft_rust.txt|	Filetype plugin for Rust
|ft_sql.txt|	about the SQL filetype plugin

Language support ~
|digraph.txt|	list of available digraphs
|mbyte.txt|	multi-byte text support
|mlang.txt|	non-English language support
|rileft.txt|	right-to-left editing mode
|arabic.txt|	Arabic language support and editing
|hebrew.txt|	Hebrew language support and editing
|russian.txt|	Russian language support and editing

GUI ~
|gui.txt|	Graphical User Interface (GUI)

Interfaces ~
|if_cscop.txt|	using Cscope with Vim
|if_lua.txt|	Lua interface
|if_pyth.txt|	Python interface
|if_ruby.txt|	Ruby interface
|sign.txt|	debugging signs

Versions ~
|vim_diff.txt|	Main differences between Nvim and Vim
|vi_diff.txt|	Main differences between Vim and Vi
						*standard-plugin-list*
Standard plugins ~
|pi_gzip.txt|      Reading and writing compressed files
|pi_health.txt|    Healthcheck framework
|pi_matchit.txt|   Extended "%" matching
|pi_msgpack.txt|   msgpack utilities
|pi_netrw.txt|     Reading and writing files over a network
|pi_paren.txt|     Highlight matching parens
|pi_spec.txt|      Filetype plugin to work with rpm spec files
|pi_tar.txt|       Tar file explorer
|pi_zip.txt|       Zip archive explorer

LOCAL ADDITIONS:				*local-additions*
|NERDTree.txt|   A tree explorer plugin to rule the Vim world. Bwahahaha!!
|commentary.txt|  Comment stuff out
|fugitive.txt|  A Git wrapper so awesome, it should be illegal
|airline.txt|  Lean and mean status/tabline that's light as air
|airline-themes.txt|  Themes for vim-airline
|gitgutter.txt|              A Vim plugin which shows a git diff in the gutter.
|CSApprox.txt|  Bringing GVim colorschemes to the terminal!
|delimitMate.txt|   Trying to keep those beasts at bay! v2.7     *delimitMate*
|tagbar.txt|    Display tags of a file ordered by scope
|ale-development.txt|  For Vim version 8.0.
|ale-supported-languages-and-tools.txt|  For Vim version 8.0.
|ale.txt|	Plugin to lint and fix files asynchronously
|indentLine.txt|        Show vertical lines for indent with conceal feature
|vim-bootstrap-updater.txt| A short multi line description of your plugin
|rhubarb.txt|  fugitive.vim extension for GitHub
|vimproc.txt|	Asynchronous execution plugin for Vim
|misc.txt|  Miscellaneous auto-load Vim scripts
|session.txt|  Extended session management for Vim
|UltiSnips.txt|    For Vim version 7.4 or later.
|vimerl.txt|	The Erlang plugin for Vim
|vim-go.txt| Go development plugin
|emmet.txt|        *Emmet* for Vim
|paredit.txt|                   Paredit              Last Change: 29 Dec 2013
|slimv.txt|                    Slimv                 Last Change: 29 Dec 2013
|ft_lua.txt|  Lua file type plug-in for the Vim text editor
|luainspect.txt|  Semantic highlighting for Lua in Vim
|jedi-vim.txt| - For Vim version 7.3 - Last change: 2014/07/29
|rails.txt|	Plugin for working with Ruby on Rails applications
|rake.txt|  It's like rails.vim without the rails
|projectionist.txt| *projectionist* Project configuration
|vim-rspec.txt| run RSpec from within vim
|rubyrefactoring.txt|  Ruby Refactoring Tool for Vim
|ft_rust.txt|      Filetype plugin for Rust
|scala.txt| Syntax highlighting and helper functions for the Scala language.
|ft-csv.txt|	For Vim version 7.4	Last Change: Thu, 15 Jan 2015
|coc-nvim.txt|				LSP support for Vim & Neovim.
|splitjoin.txt| 	Switch between single-line and multiline forms of code
|devicons|
|wakatime.txt|          WakaTime, automatic time tracking for Vim.   *wakatime*
|vim-markdown|  Vim Markdown
|vim-multiple-cursors.txt| True Sublime Text multiple selection in Vim
|matchit.txt|   Extended "%" matching
|NERDTree.txt|   A tree explorer plugin to rule the Vim world. Bwahahaha!!
|commentary.txt|  Comment stuff out
|fugitive.txt|  A Git wrapper so awesome, it should be illegal
|airline.txt|  Lean and mean status/tabline that's light as air
|airline-themes.txt|  Themes for vim-airline
|gitgutter.txt|              A Vim plugin which shows a git diff in the gutter.
|CSApprox.txt|  Bringing GVim colorschemes to the terminal!
|delimitMate.txt|   Trying to keep those beasts at bay! v2.7     *delimitMate*
|tagbar.txt|    Display tags of a file ordered by scope
|ale-development.txt|  For Vim version 8.0.
|ale-supported-languages-and-tools.txt|  For Vim version 8.0.
|ale.txt|	Plugin to lint and fix files asynchronously
|indentLine.txt|        Show vertical lines for indent with conceal feature
|vim-bootstrap-updater.txt| A short multi line description of your plugin
|rhubarb.txt|  fugitive.vim extension for GitHub
|vimproc.txt|	Asynchronous execution plugin for Vim
|misc.txt|  Miscellaneous auto-load Vim scripts
|session.txt|  Extended session management for Vim
|UltiSnips.txt|    For Vim version 7.4 or later.
|vimerl.txt|	The Erlang plugin for Vim
|vim-go.txt| Go development plugin
|emmet.txt|        *Emmet* for Vim
|paredit.txt|                   Paredit              Last Change: 29 Dec 2013
|slimv.txt|                    Slimv                 Last Change: 29 Dec 2013
|ft_lua.txt|  Lua file type plug-in for the Vim text editor
|luainspect.txt|  Semantic highlighting for Lua in Vim
|jedi-vim.txt| - For Vim version 7.3 - Last change: 2014/07/29
|rails.txt|	Plugin for working with Ruby on Rails applications
|rake.txt|  It's like rails.vim without the rails
|projectionist.txt| *projectionist* Project configuration
|vim-rspec.txt| run RSpec from within vim
|rubyrefactoring.txt|  Ruby Refactoring Tool for Vim
|ft_rust.txt|      Filetype plugin for Rust
|scala.txt| Syntax highlighting and helper functions for the Scala language.
|ft-csv.txt|	For Vim version 7.4	Last Change: Thu, 15 Jan 2015
|coc-nvim.txt|				LSP support for Vim & Neovim.
|splitjoin.txt| 	Switch between single-line and multiline forms of code
|devicons|
|wakatime.txt|          WakaTime, automatic time tracking for Vim.   *wakatime*
|vim-markdown|  Vim Markdown
|vim-multiple-cursors.txt| True Sublime Text multiple selection in Vim
|matchit.txt|   Extended "%" matching

------------------------------------------------------------------------------
*bars*		Bars example

Now that you've jumped here with CTRL-] or a double mouse click, you can use
CTRL-T, CTRL-O, g<RightMouse>, or <C-RightMouse> to go back to where you were.

Note that tags are within | characters, but when highlighting is enabled these
characters are hidden.  That makes it easier to read a command.

Anyway, you can use CTRL-] on any word, also when it is not within |, and Vim
will try to find help for it.  Especially for options in single quotes, e.g.
'hlsearch'.

------------------------------------------------------------------------------
 vim:tw=78:isk=!-~,^*,^\|,^\":ts=8:noet:ft=help:norl:

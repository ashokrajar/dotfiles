# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
[[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]] && source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"

# Customize to your needs...

# History
HISTFILE=$HOME/.zsh_history
HISTSIZE=10000000
SAVEHIST=10000000

setopt ALIAS_FUNC_DEF
# Alias definition
[[ -f "$HOME/.local_aliases" ]] && source "$HOME/.local_aliases"
[[ -f "$HOME/.local_workspecalias" ]] && source "$HOME/.local_workspecalias"
[[ -f "$HOME/.user_env_pass" ]] && source "$HOME/.user_env_pass"

# LANG 
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8

# Enable HomeBrew in MacOS
if [[ "${OSTYPE}" == darwin* ]]; then
    if [[ "$(uname -m)" == arm64 ]]; then
        [[ -f "/opt/homebrew/bin/brew" ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
    else
        [[ -f "/usr/local/bin/brew" ]] && eval "$(/usr/local/bin/brew shellenv)"
    fi
fi

# golang
# Goenv
export GOENV_DISABLE_GOPATH=1
if [ $commands[goenv] ]; then eval "$(goenv init -)"; fi
export GOPATH=$HOME/gopaths/global

[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# Rust Lang
export PATH="$HOME/.cargo/env:$PATH"

# jEnv
if [[ -s "$HOME/.jenv/version" ]]; then
    export PATH="$HOME/.jenv/bin:$PATH"
    eval "$(jenv init -)"
    export JAVA_HOME="$(jenv javahome)"    
fi

# rvm
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"

# pyenv
if [ $commands[pyenv] ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)";
    eval "$(pyenv virtualenv-init -)"
fi

# pyenv virtual environment wrapper
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# direnv
if [ $commands[direnv] ]; then eval "$(direnv hook zsh)"; fi

# K8
if [ $commands[kubectl] ]; then source <(kubectl completion zsh); fi

# Travis CI
[ -f $HOME/.travis/travis.sh ] && source $HOME/.travis/travis.sh

# A command-line fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border --preview 'bat --style full --color always {}'"
# Use fd (https://github.com/sharkdp/fd) instead of the default find
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Include OS Specific configs
if [[ "${OSTYPE}" == darwin* ]]; then
    [[ -f "$HOME/.maczshrc" ]] && source "$HOME/.maczshrc"
elif [[ "${OSTYPE}" == linux* ]]; then
    [[ -f "$HOME/.linuxzshrc" ]] && source "$HOME/.linuxzshrc"
fi

# Powerlevel10k Cutomization
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true

